// source: secrets.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.fonos.secrets.v1alpha1.CreateSecretRequest', null, global);
goog.exportSymbol('proto.fonos.secrets.v1alpha1.CreateSecretResponse', null, global);
goog.exportSymbol('proto.fonos.secrets.v1alpha1.DeleteSecretRequest', null, global);
goog.exportSymbol('proto.fonos.secrets.v1alpha1.GetSecretRequest', null, global);
goog.exportSymbol('proto.fonos.secrets.v1alpha1.GetSecretResponse', null, global);
goog.exportSymbol('proto.fonos.secrets.v1alpha1.ListSecretsIdRequest', null, global);
goog.exportSymbol('proto.fonos.secrets.v1alpha1.ListSecretsIdResponse', null, global);
goog.exportSymbol('proto.fonos.secrets.v1alpha1.Secret', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.secrets.v1alpha1.ListSecretsIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.displayName = 'proto.fonos.secrets.v1alpha1.ListSecretsIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.repeatedFields_, null);
};
goog.inherits(proto.fonos.secrets.v1alpha1.ListSecretsIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.displayName = 'proto.fonos.secrets.v1alpha1.ListSecretsIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.secrets.v1alpha1.GetSecretRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.secrets.v1alpha1.GetSecretRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.secrets.v1alpha1.GetSecretRequest.displayName = 'proto.fonos.secrets.v1alpha1.GetSecretRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.secrets.v1alpha1.GetSecretResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.secrets.v1alpha1.GetSecretResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.secrets.v1alpha1.GetSecretResponse.displayName = 'proto.fonos.secrets.v1alpha1.GetSecretResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.secrets.v1alpha1.CreateSecretRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.secrets.v1alpha1.CreateSecretRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.secrets.v1alpha1.CreateSecretRequest.displayName = 'proto.fonos.secrets.v1alpha1.CreateSecretRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.secrets.v1alpha1.CreateSecretResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.secrets.v1alpha1.CreateSecretResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.secrets.v1alpha1.CreateSecretResponse.displayName = 'proto.fonos.secrets.v1alpha1.CreateSecretResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.secrets.v1alpha1.DeleteSecretRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.secrets.v1alpha1.DeleteSecretRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.secrets.v1alpha1.DeleteSecretRequest.displayName = 'proto.fonos.secrets.v1alpha1.DeleteSecretRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.secrets.v1alpha1.Secret = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.secrets.v1alpha1.Secret, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.secrets.v1alpha1.Secret.displayName = 'proto.fonos.secrets.v1alpha1.Secret';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonos.secrets.v1alpha1.ListSecretsIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    view: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.secrets.v1alpha1.ListSecretsIdRequest}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.secrets.v1alpha1.ListSecretsIdRequest;
  return proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.secrets.v1alpha1.ListSecretsIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.secrets.v1alpha1.ListSecretsIdRequest}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {!proto.fonos.common.v1alpha1.View} */ (reader.readEnum());
      msg.setView(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.secrets.v1alpha1.ListSecretsIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getView();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.fonos.secrets.v1alpha1.ListSecretsIdRequest} returns this
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonos.secrets.v1alpha1.ListSecretsIdRequest} returns this
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional fonos.common.v1alpha1.View view = 3;
 * @return {!proto.fonos.common.v1alpha1.View}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.prototype.getView = function() {
  return /** @type {!proto.fonos.common.v1alpha1.View} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.fonos.common.v1alpha1.View} value
 * @return {!proto.fonos.secrets.v1alpha1.ListSecretsIdRequest} returns this
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdRequest.prototype.setView = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonos.secrets.v1alpha1.ListSecretsIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    secretList: jspb.Message.toObjectList(msg.getSecretList(),
    proto.fonos.secrets.v1alpha1.Secret.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.secrets.v1alpha1.ListSecretsIdResponse}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.secrets.v1alpha1.ListSecretsIdResponse;
  return proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.secrets.v1alpha1.ListSecretsIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.secrets.v1alpha1.ListSecretsIdResponse}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fonos.secrets.v1alpha1.Secret;
      reader.readMessage(value,proto.fonos.secrets.v1alpha1.Secret.deserializeBinaryFromReader);
      msg.addSecret(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.secrets.v1alpha1.ListSecretsIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.fonos.secrets.v1alpha1.Secret.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Secret secret = 1;
 * @return {!Array<!proto.fonos.secrets.v1alpha1.Secret>}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.prototype.getSecretList = function() {
  return /** @type{!Array<!proto.fonos.secrets.v1alpha1.Secret>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fonos.secrets.v1alpha1.Secret, 1));
};


/**
 * @param {!Array<!proto.fonos.secrets.v1alpha1.Secret>} value
 * @return {!proto.fonos.secrets.v1alpha1.ListSecretsIdResponse} returns this
*/
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.prototype.setSecretList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.fonos.secrets.v1alpha1.Secret=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fonos.secrets.v1alpha1.Secret}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.prototype.addSecret = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.fonos.secrets.v1alpha1.Secret, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fonos.secrets.v1alpha1.ListSecretsIdResponse} returns this
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.prototype.clearSecretList = function() {
  return this.setSecretList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonos.secrets.v1alpha1.ListSecretsIdResponse} returns this
 */
proto.fonos.secrets.v1alpha1.ListSecretsIdResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonos.secrets.v1alpha1.GetSecretRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonos.secrets.v1alpha1.GetSecretRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonos.secrets.v1alpha1.GetSecretRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.GetSecretRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    secretName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    view: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.secrets.v1alpha1.GetSecretRequest}
 */
proto.fonos.secrets.v1alpha1.GetSecretRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.secrets.v1alpha1.GetSecretRequest;
  return proto.fonos.secrets.v1alpha1.GetSecretRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.secrets.v1alpha1.GetSecretRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.secrets.v1alpha1.GetSecretRequest}
 */
proto.fonos.secrets.v1alpha1.GetSecretRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretName(value);
      break;
    case 2:
      var value = /** @type {!proto.fonos.common.v1alpha1.View} */ (reader.readEnum());
      msg.setView(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.secrets.v1alpha1.GetSecretRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonos.secrets.v1alpha1.GetSecretRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.secrets.v1alpha1.GetSecretRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.GetSecretRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getView();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string secret_name = 1;
 * @return {string}
 */
proto.fonos.secrets.v1alpha1.GetSecretRequest.prototype.getSecretName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonos.secrets.v1alpha1.GetSecretRequest} returns this
 */
proto.fonos.secrets.v1alpha1.GetSecretRequest.prototype.setSecretName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional fonos.common.v1alpha1.View view = 2;
 * @return {!proto.fonos.common.v1alpha1.View}
 */
proto.fonos.secrets.v1alpha1.GetSecretRequest.prototype.getView = function() {
  return /** @type {!proto.fonos.common.v1alpha1.View} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.fonos.common.v1alpha1.View} value
 * @return {!proto.fonos.secrets.v1alpha1.GetSecretRequest} returns this
 */
proto.fonos.secrets.v1alpha1.GetSecretRequest.prototype.setView = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonos.secrets.v1alpha1.GetSecretResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fonos.secrets.v1alpha1.GetSecretResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonos.secrets.v1alpha1.GetSecretResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.GetSecretResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    secretName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.secrets.v1alpha1.GetSecretResponse}
 */
proto.fonos.secrets.v1alpha1.GetSecretResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.secrets.v1alpha1.GetSecretResponse;
  return proto.fonos.secrets.v1alpha1.GetSecretResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.secrets.v1alpha1.GetSecretResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.secrets.v1alpha1.GetSecretResponse}
 */
proto.fonos.secrets.v1alpha1.GetSecretResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.secrets.v1alpha1.GetSecretResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonos.secrets.v1alpha1.GetSecretResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.secrets.v1alpha1.GetSecretResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.GetSecretResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string secret_name = 1;
 * @return {string}
 */
proto.fonos.secrets.v1alpha1.GetSecretResponse.prototype.getSecretName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonos.secrets.v1alpha1.GetSecretResponse} returns this
 */
proto.fonos.secrets.v1alpha1.GetSecretResponse.prototype.setSecretName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string secret = 2;
 * @return {string}
 */
proto.fonos.secrets.v1alpha1.GetSecretResponse.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonos.secrets.v1alpha1.GetSecretResponse} returns this
 */
proto.fonos.secrets.v1alpha1.GetSecretResponse.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonos.secrets.v1alpha1.CreateSecretRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonos.secrets.v1alpha1.CreateSecretRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonos.secrets.v1alpha1.CreateSecretRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.CreateSecretRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: (f = msg.getSecret()) && proto.fonos.secrets.v1alpha1.Secret.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.secrets.v1alpha1.CreateSecretRequest}
 */
proto.fonos.secrets.v1alpha1.CreateSecretRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.secrets.v1alpha1.CreateSecretRequest;
  return proto.fonos.secrets.v1alpha1.CreateSecretRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.secrets.v1alpha1.CreateSecretRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.secrets.v1alpha1.CreateSecretRequest}
 */
proto.fonos.secrets.v1alpha1.CreateSecretRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fonos.secrets.v1alpha1.Secret;
      reader.readMessage(value,proto.fonos.secrets.v1alpha1.Secret.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.secrets.v1alpha1.CreateSecretRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonos.secrets.v1alpha1.CreateSecretRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.secrets.v1alpha1.CreateSecretRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.CreateSecretRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fonos.secrets.v1alpha1.Secret.serializeBinaryToWriter
    );
  }
};


/**
 * optional Secret secret = 1;
 * @return {?proto.fonos.secrets.v1alpha1.Secret}
 */
proto.fonos.secrets.v1alpha1.CreateSecretRequest.prototype.getSecret = function() {
  return /** @type{?proto.fonos.secrets.v1alpha1.Secret} */ (
    jspb.Message.getWrapperField(this, proto.fonos.secrets.v1alpha1.Secret, 1));
};


/**
 * @param {?proto.fonos.secrets.v1alpha1.Secret|undefined} value
 * @return {!proto.fonos.secrets.v1alpha1.CreateSecretRequest} returns this
*/
proto.fonos.secrets.v1alpha1.CreateSecretRequest.prototype.setSecret = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonos.secrets.v1alpha1.CreateSecretRequest} returns this
 */
proto.fonos.secrets.v1alpha1.CreateSecretRequest.prototype.clearSecret = function() {
  return this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonos.secrets.v1alpha1.CreateSecretRequest.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonos.secrets.v1alpha1.CreateSecretResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fonos.secrets.v1alpha1.CreateSecretResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonos.secrets.v1alpha1.CreateSecretResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.CreateSecretResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: (f = msg.getSecret()) && proto.fonos.secrets.v1alpha1.Secret.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.secrets.v1alpha1.CreateSecretResponse}
 */
proto.fonos.secrets.v1alpha1.CreateSecretResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.secrets.v1alpha1.CreateSecretResponse;
  return proto.fonos.secrets.v1alpha1.CreateSecretResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.secrets.v1alpha1.CreateSecretResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.secrets.v1alpha1.CreateSecretResponse}
 */
proto.fonos.secrets.v1alpha1.CreateSecretResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fonos.secrets.v1alpha1.Secret;
      reader.readMessage(value,proto.fonos.secrets.v1alpha1.Secret.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.secrets.v1alpha1.CreateSecretResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonos.secrets.v1alpha1.CreateSecretResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.secrets.v1alpha1.CreateSecretResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.CreateSecretResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fonos.secrets.v1alpha1.Secret.serializeBinaryToWriter
    );
  }
};


/**
 * optional Secret secret = 1;
 * @return {?proto.fonos.secrets.v1alpha1.Secret}
 */
proto.fonos.secrets.v1alpha1.CreateSecretResponse.prototype.getSecret = function() {
  return /** @type{?proto.fonos.secrets.v1alpha1.Secret} */ (
    jspb.Message.getWrapperField(this, proto.fonos.secrets.v1alpha1.Secret, 1));
};


/**
 * @param {?proto.fonos.secrets.v1alpha1.Secret|undefined} value
 * @return {!proto.fonos.secrets.v1alpha1.CreateSecretResponse} returns this
*/
proto.fonos.secrets.v1alpha1.CreateSecretResponse.prototype.setSecret = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonos.secrets.v1alpha1.CreateSecretResponse} returns this
 */
proto.fonos.secrets.v1alpha1.CreateSecretResponse.prototype.clearSecret = function() {
  return this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonos.secrets.v1alpha1.CreateSecretResponse.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonos.secrets.v1alpha1.DeleteSecretRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonos.secrets.v1alpha1.DeleteSecretRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonos.secrets.v1alpha1.DeleteSecretRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.DeleteSecretRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: (f = msg.getSecret()) && proto.fonos.secrets.v1alpha1.Secret.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.secrets.v1alpha1.DeleteSecretRequest}
 */
proto.fonos.secrets.v1alpha1.DeleteSecretRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.secrets.v1alpha1.DeleteSecretRequest;
  return proto.fonos.secrets.v1alpha1.DeleteSecretRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.secrets.v1alpha1.DeleteSecretRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.secrets.v1alpha1.DeleteSecretRequest}
 */
proto.fonos.secrets.v1alpha1.DeleteSecretRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fonos.secrets.v1alpha1.Secret;
      reader.readMessage(value,proto.fonos.secrets.v1alpha1.Secret.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.secrets.v1alpha1.DeleteSecretRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonos.secrets.v1alpha1.DeleteSecretRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.secrets.v1alpha1.DeleteSecretRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.DeleteSecretRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fonos.secrets.v1alpha1.Secret.serializeBinaryToWriter
    );
  }
};


/**
 * optional Secret secret = 1;
 * @return {?proto.fonos.secrets.v1alpha1.Secret}
 */
proto.fonos.secrets.v1alpha1.DeleteSecretRequest.prototype.getSecret = function() {
  return /** @type{?proto.fonos.secrets.v1alpha1.Secret} */ (
    jspb.Message.getWrapperField(this, proto.fonos.secrets.v1alpha1.Secret, 1));
};


/**
 * @param {?proto.fonos.secrets.v1alpha1.Secret|undefined} value
 * @return {!proto.fonos.secrets.v1alpha1.DeleteSecretRequest} returns this
*/
proto.fonos.secrets.v1alpha1.DeleteSecretRequest.prototype.setSecret = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonos.secrets.v1alpha1.DeleteSecretRequest} returns this
 */
proto.fonos.secrets.v1alpha1.DeleteSecretRequest.prototype.clearSecret = function() {
  return this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonos.secrets.v1alpha1.DeleteSecretRequest.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonos.secrets.v1alpha1.Secret.prototype.toObject = function(opt_includeInstance) {
  return proto.fonos.secrets.v1alpha1.Secret.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonos.secrets.v1alpha1.Secret} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.Secret.toObject = function(includeInstance, msg) {
  var f, obj = {
    secretName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.secrets.v1alpha1.Secret}
 */
proto.fonos.secrets.v1alpha1.Secret.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.secrets.v1alpha1.Secret;
  return proto.fonos.secrets.v1alpha1.Secret.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.secrets.v1alpha1.Secret} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.secrets.v1alpha1.Secret}
 */
proto.fonos.secrets.v1alpha1.Secret.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.secrets.v1alpha1.Secret.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonos.secrets.v1alpha1.Secret.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.secrets.v1alpha1.Secret} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.secrets.v1alpha1.Secret.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string secret_name = 1;
 * @return {string}
 */
proto.fonos.secrets.v1alpha1.Secret.prototype.getSecretName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonos.secrets.v1alpha1.Secret} returns this
 */
proto.fonos.secrets.v1alpha1.Secret.prototype.setSecretName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string secret = 2;
 * @return {string}
 */
proto.fonos.secrets.v1alpha1.Secret.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonos.secrets.v1alpha1.Secret} returns this
 */
proto.fonos.secrets.v1alpha1.Secret.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.fonos.secrets.v1alpha1);
